#!/bin/bash

#set -eu

if [ -z $1 ]; then
    CUSTOM="no"
else
    CUSTOM="yes"
fi

export LEIN_SNAPSHOTS_IN_RELEASE="yes"
export LEIN_ROOT="yes"
OS="ref"
CLIENT_DIR="client/cli-python"
SERVER_DIR="server"

CLIENT_COMPONENTS="${CLIENT_DIR}/jark-client ${CLIENT_DIR}/simplejson.py ${CLIENT_DIR}/termcolor.py"

build_server() {
    echo "Building jark server"
    cd ${SERVER_DIR}
    lein clean && lein uberjar

    cd -
    tar -rf payload.tar `ls ${SERVER_DIR}/*standalone.jar`
}

build_jarkc() {
    CD=$(pwd)
    cd ${CLIENT_DIR}
    runhaskell setup configure --prefix=$HOME --user
    runhaskell setup build
    cd $CD
    cp ${CLIENT_DIR}/dist/build/jarkc/jarkc ${CLIENT_DIR}/jarkc
    chmod +x ${CLIENT_DIR}/jarkc
    rm -rf ${CLIENT_DIR}/dist
}

build_client() {
    tar -rf payload.tar ${CLIENT_COMPONENTS}
}

update_version() {
    local TMPL_COMPONENT="$1"
    echo "Updating build information"
    COMMIT=`git rev-parse --verify --short HEAD`
    DATE=`date`
    ARCH=`uname -m`
    TMPL_DATE="$DATE"
    #RELEASE_VERSION=`git branch --no-color | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'`
    RELEASE_VERSION="0.3"
    echo "git hash        : $COMMIT"
    echo "arch            : $ARCH"
    echo "date            : $DATE"
    echo "component       : ${TMPL_COMPONENT}"
    echo "release version : $RELEASE_VERSION"
    perl -pi -e "s/TMPL_VERSION/$COMMIT/g" jark
    perl -pi -e "s/TMPL_ARCH/${ARCH}/g" jark
    perl -pi -e "s/TMPL_DATE/${TMPL_DATE}/g" jark
    perl -pi -e "s/TMPL_COMPONENT/${TMPL_COMPONENT}/g" jark
    perl -pi -e "s/TMPL_RELEASE_VERSION/${RELEASE_VERSION}/g" jark
    exit 0
}

generate_jark() {
    if [ -e "payload.tar" ]; then
        gzip payload.tar
        cat ${WRAP_DIR}/jark.bin payload.tar.gz > jark
        rm payload.tar.gz
        chmod +x jark
        echo "jark self extracting script created"
    else
        echo "payload.tar.gz does not exist"
        exit 1
    fi
}

# begin building

if [ "$1" == "--jarkc" ] || [ "$1" == "jarkc" ]; then
    echo "building jarkc"
    build_jarkc
    exit 0
fi

echo "Adding common components ..."
tar cf payload.tar README.md

TMPL_COMPONENT="client"

if [ $CUSTOM == "no" ]; then
    echo "building both server and client components"
    TMPL_COMPONENT="server"
    build_server
    build_client
else
    if [ "$1" == "--client" ] || [ "$1" == "client" ]; then
        echo "building client components"
        TMPL_COMPONENT="client"
        build_client
    fi

    if [ "$1" == "--server" ] || [ "$1" == "server" ]; then
        echo "building server components"
        TMPL_COMPONENT="server"
        build_server
    fi

   
fi

generate_jark
update_version ${TMPL_COMPONENT}
exit 0




